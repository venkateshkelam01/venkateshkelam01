# Allow the workflow token to push (fixes 403 on first publish)
permissions:
  contents: write
  discussions: write
  pull-requests: write

on:
  schedule:
    - cron: "0 0 * * *"           # run daily at 00:00 UTC
  workflow_dispatch:               # allow manual runs
  push:
    branches: [ main ]             # regenerate when README updates

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # 🧩 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      # 🐍 2. Generate Snake animations (SVG + Dark + Blue GIF)
      - name: Generate Snake animations
        uses: Platane/snk@v3
        with:
          github_user_name: venkateshkelam01
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            # Blue snake + blue gradient dots
            dist/ocean.gif?color_snake=#1E90FF&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 🔍 3. Debug check — confirm files were generated
      - name: Verify generated files
        run: |
          echo "Checking generated files..."
          if [ -d dist ]; then
            ls -R dist
          else
            echo "⚠️ dist directory not found! Snake generation may have failed."
          fi

      # 🚀 4. Deploy generated files to ⁠ output ⁠ branch
      - name: Deploy to ⁠ output ⁠ branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: output
          BUILD_DIR: dist
        run: |
          set -euo pipefail
          echo "Preparing dist directory..."
          mkdir -p "${BUILD_DIR}"
          sudo chown -R $USER:$USER "${BUILD_DIR}" || true
          chmod -R u+w "${BUILD_DIR}" || true

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          REMOTE="https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

          echo "Switching to or creating ${BRANCH} branch..."
          if git ls-remote --exit-code --heads "$REMOTE" "$BRANCH" > /dev/null 2>&1; then
            git fetch "$REMOTE" "$BRANCH":"$BRANCH"
            git checkout -f "$BRANCH"
          else
            git checkout --orphan "$BRANCH"
          fi

          echo "Cleaning old files..."
          git rm -rf . > /dev/null 2>&1 || true

          echo "Copying new build from ${BUILD_DIR}..."
          cp -R "${BUILD_DIR}/." .
          touch .nojekyll

          echo "Committing and pushing..."
          git add -A
          git commit -m "🐍 Update contribution snake animation (blue theme)" || echo "No changes to commit"
          git push -f "$REMOTE" "$BRANCH"

      # ✅ 5. Confirm completion
      - name: Done
        run: echo "🎉 Snake animation generation and deployment complete!"