name: GitHub Snake Game üêç

permissions:
  contents: write    # allow pushes to output branch

on:
  schedule:
    - cron: "0 0 * * *"           # run daily at 00:00 UTC
  workflow_dispatch:               # allow manual runs
  push:
    branches: [ main ]             # regenerate when README updates

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      # ‚úÖ New step ‚Äî clean up generated files before switching branches
      - name: Remove untracked dist files
        run: |
          echo "Cleaning up old generated files..."
          rm -f dist/github-snake-dark.svg dist/github-snake.svg dist/ocean.gif || true

      - name: Generate Snake animations (SVG + Dark + Blue GIF)
        uses: Platane/snk@v3
        with:
          github_user_name: venkateshkelam01
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=#1E90FF&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to `output` branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: output
          BUILD_DIR: dist
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          REMOTE="https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

          # Create or switch to output branch
          if git ls-remote --exit-code --heads "$REMOTE" "$BRANCH" > /dev/null 2>&1; then
            echo "Fetching and switching to existing branch: $BRANCH"
            git fetch "$REMOTE" "$BRANCH":"$BRANCH"
            git checkout "$BRANCH"
          else
            echo "Creating new orphan branch: $BRANCH"
            git checkout --orphan "$BRANCH"
          fi

          # Clean current branch and copy fresh files
          git rm -rf . > /dev/null 2>&1 || true
          cp -R "${BUILD_DIR}/." .
          touch .nojekyll

          git add -A
          git commit -m "üêç Update contribution snake animation (blue theme)" || echo "No changes to commit"
          git push -f "$REMOTE" "$BRANCH"
