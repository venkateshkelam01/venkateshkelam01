name: GitHub Snake Game üêç

# Give the workflow token push rights (fixes 403 on first publish)
permissions:
  contents: write

on:
  schedule:
    - cron: "0 0 * * *"           # run daily at 00:00 UTC
  workflow_dispatch:               # allow manual runs
  push:
    branches: [ main ]             # regenerate when README updates

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false   # we'll set the remote with the token manually
          fetch-depth: 0               # we need history for branch ops

      - name: Generate Snake animations (SVG + Dark + Blue GIF)
        uses: Platane/snk@v3
        with:
          github_user_name: venkateshkelam01
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            # Blue snake + blue gradient dots
            dist/ocean.gif?color_snake=#1E90FF&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to `output` branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: output
          BUILD_DIR: dist
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Use token-authenticated remote
          REMOTE="https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

          # Does remote branch exist?
          if git ls-remote --exit-code --heads "$REMOTE" "$BRANCH" > /dev/null 2>&1; then
            # Fetch & switch to it
            git fetch "$REMOTE" "$BRANCH":"$BRANCH"
            git checkout "$BRANCH"
          else
            # First publish: create orphan branch
            git checkout --orphan "$BRANCH"
          fi

          # Clean branch contents and copy freshly generated files
          git rm -rf . > /dev/null 2>&1 || true
          mkdir -p .
          cp -R "${BUILD_DIR}/." .

          # Prevent Jekyll from mangling files if ever served via Pages
          touch .nojekyll

          git add -A
          git commit -m "üêç Update contribution snake animation (blue theme)" || echo "No changes to commit"
          git push -f "$REMOTE" "$BRANCH"
